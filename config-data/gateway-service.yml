server:
  port: 8080
eureka:
  instance:
    hostname: localhost
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
      default-zone: http://eureka:password@localhost:8761/eureka
spring:
  cloud:
    gateway:
      default-filters:
        - SaveSession
        - TokenRelay
      discovery:
        locator:
          enabled: true
      routes:
        - id: user-service
          uri: lb://user-service
          predicates:
            - Path=/user/**
        - id: car-service
          uri: lb://car-service
          predicates:
            - Path=/car/**
        - id: motorcycle-service
          uri: lb://motorcycle-service
          predicates:
            - Path=/motorcycle/**
        - id: eureka-service
          uri: http://localhost:8761
          predicates:
            - Path=/eureka/web
          filters:
            - SetPath=/
        - id: eureka-service-static
          uri: http://localhost:8761
          predicates:
            - Path=/eureka/**

  security:
    oauth2:
      client:
        registration:
          gateway:
            provider: my-provider
            client-id: microservices_client
            client-secret: qsP2PyEpyIp3SEnfAlAFqCVuic6o92CV
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/keycloak"
            scope: openid
        provider:
          my-provider:
            issuer-uri: http://localhost:8180/realms/microservices-realm